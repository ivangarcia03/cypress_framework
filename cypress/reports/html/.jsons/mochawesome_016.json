{
  "stats": {
    "suites": 0,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2023-11-16T02:04:29.604Z",
    "end": "2023-11-16T02:04:36.879Z",
    "duration": 7275,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d91c7d0f-9619-49fe-a527-1d094bf62546",
      "title": "",
      "fullFile": "cypress\\e2e\\integration\\AssertionsPractices02.cy.js",
      "file": "cypress\\e2e\\integration\\AssertionsPractices02.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Assertion Practice",
          "fullTitle": "Assertion Practice",
          "timedOut": null,
          "duration": 7222,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress\\\\e2e\\\\integration\\\\AssertionsPractices02.cy.js\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"\\\\AssertionsPractices02.cy.js\\\\Assertion Practice (failed).png\"\n      ]\n    ]\n  }\n]",
          "code": "cy.visit('https://techglobal-training.com/frontend');\ncy.clickCard('Html Elements');\ncy.contains('Text Inputs').parent().find('input').as('textInputs');\nconst names = ['Teach', 'Global'];\ncy.get('@textInputs').each(($el, index) => {\n  cy.wrap($el).type(names[index]).should('be.enabled').and('not.have.attr', 'required');\n});\n/*\n   cy.get('#text_input1, #text_input2').each(($el) => {\n    cy.wrap($el).type('Ivan Garcia'.split(\" \")[index]).should('be.enabled').and('not.have.attr', 'required');\n  })\n\n*/\n/**\n     * 1. Go to https://techglobal-training.com/frontend\n     * 2. Navigate to 'Html Elements' card\n     * 3. From the \"Date Inputs\" section\n     * 4. Validate date input 1 and date input 2 is enabled\n     * 5. Validate date input 1 and date input 2 is is not required\n     * 6. Enter dates for both date input 1 and date input 2\n     * 7. Validate value is changed to given dates.\n     */\ncy.visit('https://techglobal-training.com/frontend');\ncy.clickCard('Html Elements');\ncy.contains('Date Inputs').parent().find('input').as('Input');\nconst date = ['01/28/2023', '05/27/2023'];\ncy.get('@Input').each(($el, index) => {\n  cy.wrap($el).clear().type(date[index]).should('be.enabled').and('not.have.attr', 'required');\n  cy.wrap($el).should('have.attr', 'value', date[index]);\n});\n/**\n  * 1. Go to https://techglobal-training.com/frontend\n  * 2. Navigate to 'Html Elements' card\n  * 3. From the \"Dropdowns\" section\n  * 4. Validate dropdown 1 and dropdown 2 is enabled\n  * 6. Enter Microsoft for dropdown 1 and Apple for dropdown 2\n  * 7. Validate options are selected\n  */\ncy.visit('https://techglobal-training.com/frontend');\ncy.clickCard('Html Elements');\ncy.contains('Dropdowns').parent().find('select').as('Dropdowns');\nconst select = ['Microsoft', 'Apple'];\ncy.get('@Dropdowns').each(($el, index) => {\n  cy.wrap($el).select(select[index]).should('be.enabled');\n  cy.wrap($el).find('option:selected').should('have.text', select[index]);\n});",
          "err": {
            "message": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input type=\"text\" id=\"date_input2\" class=\"\" value=\"11/15/2023\">`\n\nis being covered by another element:\n\n`<div class=\"react-datepicker__day-name\">Tu</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
            "estack": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input type=\"text\" id=\"date_input2\" class=\"\" value=\"11/15/2023\">`\n\nis being covered by another element:\n\n`<div class=\"react-datepicker__day-name\">Tu</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (https://techglobal-training.com/__cypress/runner/cypress_runner.js:111910:68)\n    at ensureDescendents (https://techglobal-training.com/__cypress/runner/cypress_runner.js:111961:5)\n    at ensureDescendentsAndScroll (https://techglobal-training.com/__cypress/runner/cypress_runner.js:111967:14)\n    at ensureElIsNotCovered (https://techglobal-training.com/__cypress/runner/cypress_runner.js:112098:5)\n    at runAllChecks (https://techglobal-training.com/__cypress/runner/cypress_runner.js:112297:52)\n    at retryActionability (https://techglobal-training.com/__cypress/runner/cypress_runner.js:112334:16)\n    at tryCatcher (https://techglobal-training.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (https://techglobal-training.com/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (https://techglobal-training.com/__cypress/runner/cypress_runner.js:144253:68)\n    at <unknown> (https://techglobal-training.com/__cypress/runner/cypress_runner.js:144194:14)\n    at tryCatcher (https://techglobal-training.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://techglobal-training.com/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://techglobal-training.com/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://techglobal-training.com/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://techglobal-training.com/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (https://techglobal-training.com/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (https://techglobal-training.com/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://cypress_framework/./cypress/e2e/integration/AssertionsPractices02.cy.js:46:17)",
            "diff": null
          },
          "uuid": "e55fc1d1-6a3e-42bb-b05b-14581d4e51db",
          "parentUUID": "d91c7d0f-9619-49fe-a527-1d094bf62546",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [],
      "failures": [
        "e55fc1d1-6a3e-42bb-b05b-14581d4e51db"
      ],
      "pending": [],
      "skipped": [],
      "duration": 7222,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "My Regression Results",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}